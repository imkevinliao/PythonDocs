[
    {
        "bookSourceComment": "/*\n\t下面套娃网站(m和www通用)\n\thttps://m.5xw.net/\n\thttps://m.123duw.com/\n\thttps://m.qu7.net/\n\thttps://m.1bqg.net/\n\thttps://m.nchdzx.com/\n*/\ntry{\n\tc2=result.match(/c2=\"(.*?)\"/)[1]\n\tu2=result.match(/src=\"(.*?)\"/)[1]\n\torigin=baseUrl.match(/[^.]+[^/]+/)[0]\n\tstr=java.ajax(origin+u2).match(/function.*\\(\\)\\}/)[0]\n\teval(str);temp=ajax(c2)\n\tjava.ajax(origin+temp)\n if(baseUrl.match(/sscc/)){\n \tu=java.get(\"url\")}else{u=baseUrl}\n\tresult=java.ajax(u)\n}catch(err){\"\"}",
        "bookSourceGroup": "1111,测试",
        "bookSourceName": "123读",
        "bookSourceType": 0,
        "bookSourceUrl": "https://m.123duw.com/",
        "customOrder": 0,
        "enabled": true,
        "enabledCookieJar": true,
        "enabledExplore": false,
        "enabledReview": true,
        "header": "",
        "lastUpdateTime": 1680245775640,
        "loginUrl": "",
        "respondTime": 180000,
        "ruleBookInfo": {
            "intro": "[property~=description]@content",
            "kind": "[property~=category|status|time]@content##.\\d{2}:.*",
            "wordCount": ""
        },
        "ruleContent": {
            "content": "<js>\nif(result.match(/<title>\\d+</)){\ncookie.removeCookie(baseUrl)\nresult=java.ajax(baseUrl)\n}\neval(String(source.bookSourceComment))\ncc=String(cookie.getCookie(baseUrl)).replace(/\\%2C[^;]+/g,\"\")\ncookie.setCookie(baseUrl,cc)\njava.setContent(result)\nresult\n</js>\n#content@html||[class~=(?i)content]@html",
            "nextContentUrl": "text.下—页@href||text.下一页@href",
            "replaceRegex": "##\\s+\"\\n|\\s+本章(没|未)完，.*|(\\.\\n)?.*看完记得收藏.*|\\s+\\/\\d+\\/.*|\\s+。：.*|\\s+：。.*"
        },
        "ruleExplore": [],
        "ruleReview": [],
        "ruleSearch": {
            "author": "text.作者：@text##作者：",
            "bookList": "<js>\neval(String(source.bookSourceComment))\n</js>\n.B",
            "bookUrl": "a.0@href",
            "checkKeyWord": "",
            "coverUrl": "img@src",
            "intro": ".d2@text##简介：",
            "kind": "",
            "lastChapter": "a.-1@text",
            "name": "img@alt",
            "wordCount": "@js:\ntry{\t\ncc=String(cookie.getCookie(baseUrl)).replace(java.get(\"key\"),\"\")\ncookie.setCookie(baseUrl,cc)\n}catch(e){\"\"}"
        },
        "ruleToc": {
            "chapterList": "//*[@class=\"MLlist\"]/li/a||//dt[-1]/following-sibling::dd/a",
            "chapterName": "text",
            "chapterUrl": "href"
        },
        "searchUrl": "@js:\ntry{\ncookie.removeCookie(baseUrl)\ns=String(java.ajax(baseUrl))\nact=s.match(/\"act\".*?\"(.{16})\"/)[1]\nsub=s.match(/name=\"submit\".*?value=\"(.*?)\"/)[1]\nbody=String(\"act=\"+act+\"&q=\"+key+\"&submit=\"+sub)\nxx=body.match(/[^&=]+/g)\nfor(i in xx){\nre=java.encodeURI(xx[i],\"gbk\")\nbody=body.replace(xx[i],re)\n }\nvar url=String(baseUrl+\"sscc/,\"+JSON.stringify({\n\t\"method\":\"POST\",\"body\":body}))\njava.put(\"key\",body.match(/q=([^&]*)/)[1])\njava.put(\"url\",url)\n}catch{java.longToast(\"获取失败\")}",
        "variableComment": "",
        "weight": 0
    }
]